# -*- coding: utf-8 -*-

"""
/***************************************************************************
 MapAnalyser
                                 A QGIS plugin
 This tool will help you analyze the map
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2020-07-10
        copyright            : (C) 2020 by Potemkin D.A., Yakimova O.P.
        email                : daniilpot@yandex.ru
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Potemkin D.A., Yakimova O.P.'
__date__ = '2020-07-10'
__copyright__ = '(C) 2020 by Potemkin D.A., Yakimova O.P.'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

from qgis.core import QgsProcessingProvider
from .rle_map.rle_ratio_map_algorithm import RLERatioOfMapAlgorithm
from .rle_image.rle_ratio_image_algorithm import RLERatioOfImageAlgorithm
from .layer_chars.layer_characteristics_algorithm import LayerCharacteristicsAlgorithm
from .total_intersections.common_line_intersection_algorithm import CommonIntersectionAlgorithm


class MapAnalyserProvider(QgsProcessingProvider):

    def __init__(self):
        QgsProcessingProvider.__init__(self)

        # Load algorithms
        self.alglist = [RLERatioOfMapAlgorithm(),
                        RLERatioOfImageAlgorithm(),
                        LayerCharacteristicsAlgorithm(),
                        CommonIntersectionAlgorithm()]

    def unload(self):
        """
        Unloads the provider. Any tear-down steps required by the provider
        should be implemented here.
        """
        pass

    def loadAlgorithms(self):
        """
        Loads all algorithms belonging to this provider.
        """
        for alg in self.alglist:
            self.addAlgorithm( alg )

    def id(self):
        """
        Returns the unique provider id, used for identifying the provider. This
        string should be a unique, short, character only string, eg "qgis" or
        "gdal". This string should not be localised.
        """
        return 'Map Analyser'

    def name(self):
        """
        Returns the provider name, which is used to describe the provider
        within the GUI.

        This string should be short (e.g. "Lastools") and localised.
        """
        return self.tr('Map Analyser')

    def longName(self):
        """
        Returns the a longer version of the provider name, which can include
        extra details such as version numbers. E.g. "Lastools LIDAR tools
        (version 2.2.1)". This string should be localised. The default
        implementation returns the same string as name().
        """
        return self.name()
